name: Build and deploy Spfx

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: checkout files
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '18.18'
          cache: 'npm'

      # - name: Get npm cache directory
      #   id: npm-cache-dir
      #   shell: bash
      #   run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      # - name: cache task
      #   uses: actions/cache@v3
      #   id: npm-cache 
      #   with:
      #     path: ${{ steps.npm-cache-dir.outputs.dir }}
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: npm install
        run: npm install

      - name : gulp build
        run: gulp build --ship

      - name : gulp bundle
        run: gulp bundle --ship

      - name : gulp package
        run: gulp package-solution --ship
    
      - name: github context output
        run: echo "${{ toJson(github)}}"

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: my-artifact
          path: sharepoint/solution/
          
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: my-artifact
  
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '18.18'

      - name: npm install custom
        run: npm i -g @pnp/cli-microsoft365

      - name: M365 login
        id: login
        uses: pnp/action-cli-login@v2.2.1
        with:
          ADMIN_USERNAME:  ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD:  ${{ secrets.ADMIN_PASSWORD }}

      - name: Add spfx package in catalog
        run: m365 spo app add -p my-first-webpart.sppkg --overwrite

      - name: Deploy the Spfx package
        run: m365 spo app deploy --name my-first-webpart.sppkg

      - name: install spfx package in dev site
        run: m365 spo app install --id "b4194485-6773-42bd-8bd6-fbfc5bc21e9b" --siteUrl "https://tgshl.sharepoint.com/sites/Dev"
